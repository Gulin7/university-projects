     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  
     6                                  ; declare external functions needed by our program
     7                                  extern exit               ; tell nasm that exit exists even if we won't be defining it
     8                                  import exit msvcrt.dll    ; exit is a function that ends the calling process. It is defined in msvcrt.dll
     9                                                            ; msvcrt.dll contains exit, printf and all the other important C-runtime specific functions
    10                                  
    11                                  ; our data is declared here (the variables needed by our program)
    12                                  segment data use32 class=data
    13                                      ; A string of doublewords is given. Obtain the list made out of the high bytes of the high words of each doubleword from the given list with the property that these bytes are multiple of 3.
    14                                      ;s DD 12345678h, 1A2B3C4Dh, FE98DC76h
    15                                      ;d: 12h.
    16 00000000 785634124D3C2B1AC7-         s dd 12345678h, 1A2B3C4Dh, 6FE98DC7h    
    16 00000009 8DE96F             
    17                                      len equ ($-s)/4
    18 0000000C 03                          t db 3
    19 0000000D <res 00000003>              rez resb len
    20                                  
    21                                  ; our code starts here
    22                                  segment code use32 class=code
    23                                      start:
    24                                          ; ...
    25 00000000 B903000000                      mov ecx, len
    26 00000005 BE[00000000]                    mov esi, s
    27 0000000A BF00000000                      mov edi, 0
    28 0000000F FC                              cld
    29                                          repeat:
    30 00000010 66AD                                lodsw
    31 00000012 66AD                                lodsw
    32 00000014 66C1E808                            shr ax, 8
    33 00000018 B400                                mov ah,0
    34 0000001A 88C3                                mov bl, al
    35 0000001C F635[0C000000]                      div byte[t]
    36 00000022 80FC00                              cmp ah, 0
    37 00000025 7507                                jnz notmultiple
    38 00000027 889F[0D000000]                      mov [rez+edi], bl
    39 0000002D 47                                  inc edi
    40                                              notmultiple:
    41 0000002E E2E0                            loop repeat
    42                                          
    43                                          ; exit(0)
    44 00000030 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    45 00000032 FF15[00000000]                  call    [exit]       ; call exit to terminate the program
