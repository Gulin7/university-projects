% a. For a list of integer numbers, define a predicate to write twice in list every 
%prime number. b. For a heterogeneous list, formed from integer numbers and 
%list of numbers, define a predicate to write in every sublist twice every prime number. 
%Eg.: [1, [2, 3], 4, 5, [1, 4, 6], 3, [1, 3, 7, 9, 10], 5] => 
%[1, [2, 2, 3, 3], 4, 5, [1, 4, 6], 3, [1, 3, 3, 7, 7, 9, 10], 5] 

%function to see if its prime
is_prime(2).
is_prime(3).
is_prime(N) :-
    N > 3,
    N mod 2 =\= 0,
    \+ has_factor(N, 3).
%function to see if N has a "divizor", auxiliary for is_prime
has_factor(N, F) :-
    N mod F =:= 0.
has_factor(N, F) :-
    F * F < N,
    F2 is F + 2,
    has_factor(N, F2).
%duplicate prime numbers in a list
duplicate_primes([],[]).
duplicate_primes([H|T],[H,H|R]):-
    is_prime(H),
    !,
    duplicate_primes(T,R).

duplicate_primes([H|T],[H|R]):-
    duplicate_primes(T,R).

duplicate_primes_in_sublist([], []).
duplicate_primes_in_sublist([H|T], [H2|R]) :-
    is_list(H),
    !,
    duplicate_primes(H,H2),
    duplicate_primes_in_sublist(T, R).
duplicate_primes_in_sublist([H|T], [H|R]) :-
    duplicate_primes_in_sublist(T, R).