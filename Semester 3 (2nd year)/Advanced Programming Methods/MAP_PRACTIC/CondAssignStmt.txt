//CondAssignStmt
package src.domain.stmt;

import src.domain.exception.MyException;
import src.domain.exp.Exp;
import src.domain.prgstate.MyIDictionary;
import src.domain.prgstate.MyIStack;
import src.domain.prgstate.PrgState;
import src.domain.stmt.AssignStmt;
import src.domain.stmt.IStmt;
import src.domain.stmt.IfStmt;
import src.domain.type.Type;

public class CondAssignStmt implements IStmt {

    private final String var;
    private final Exp exp1;
    private final Exp exp2;

    private final Exp exp3;

    public CondAssignStmt(String var, Exp exp1, Exp exp2, Exp exp3) {
        this.var = var;
        this.exp1 = exp1;
        this.exp2 = exp2;
        this.exp3 = exp3;
    }


    @Override
    public PrgState execute(PrgState state) throws MyException {
        MyIStack<IStmt> stk = state.getStack();
        IStmt stmt = new IfStmt(exp1, new AssignStmt(var, exp2), new AssignStmt(var, exp3));
        stk.push(stmt);
        return null;
    }

    @Override
    public MyIDictionary<String, Type> typeCheck(MyIDictionary<String, Type> typeEnv) throws MyException {
        return null;
    }

    @Override
    public String toString() {
        return var + " = " + exp1.toString() + " ? " + exp2.toString() + " : " + exp3.toString();
    }

}
