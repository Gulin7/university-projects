[PROCESS ID]: 3
[EXE STACK]: 
(int v|(v = 20|(for( v = 0; v < 3 ; v = v + 1 ) { Fork((Print(v)|v = v + 1)) }|Print(v * 10))))
[SYMBOL TABLE]: 
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:

[PROCESS ID]: 3
[EXE STACK]: 
int v
(v = 20|(for( v = 0; v < 3 ; v = v + 1 ) { Fork((Print(v)|v = v + 1)) }|Print(v * 10)))
[SYMBOL TABLE]: 
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:

[PROCESS ID]: 3
[EXE STACK]: 
int v
(v = 20|(for( v = 0; v < 3 ; v = v + 1 ) { Fork((Print(v)|v = v + 1)) }|Print(v * 10)))
[SYMBOL TABLE]: 
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:

[PROCESS ID]: 3
[EXE STACK]: 
(v = 20|(for( v = 0; v < 3 ; v = v + 1 ) { Fork((Print(v)|v = v + 1)) }|Print(v * 10)))
[SYMBOL TABLE]: 
v -> 0
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:

[PROCESS ID]: 3
[EXE STACK]: 
(v = 20|(for( v = 0; v < 3 ; v = v + 1 ) { Fork((Print(v)|v = v + 1)) }|Print(v * 10)))
[SYMBOL TABLE]: 
v -> 0
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:

[PROCESS ID]: 3
[EXE STACK]: 
v = 20
(for( v = 0; v < 3 ; v = v + 1 ) { Fork((Print(v)|v = v + 1)) }|Print(v * 10))
[SYMBOL TABLE]: 
v -> 0
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:

[PROCESS ID]: 3
[EXE STACK]: 
v = 20
(for( v = 0; v < 3 ; v = v + 1 ) { Fork((Print(v)|v = v + 1)) }|Print(v * 10))
[SYMBOL TABLE]: 
v -> 0
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:

[PROCESS ID]: 3
[EXE STACK]: 
(for( v = 0; v < 3 ; v = v + 1 ) { Fork((Print(v)|v = v + 1)) }|Print(v * 10))
[SYMBOL TABLE]: 
v -> 20
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:

[PROCESS ID]: 3
[EXE STACK]: 
(for( v = 0; v < 3 ; v = v + 1 ) { Fork((Print(v)|v = v + 1)) }|Print(v * 10))
[SYMBOL TABLE]: 
v -> 20
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:

[PROCESS ID]: 3
[EXE STACK]: 
for( v = 0; v < 3 ; v = v + 1 ) { Fork((Print(v)|v = v + 1)) }
Print(v * 10)
[SYMBOL TABLE]: 
v -> 20
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:

[PROCESS ID]: 3
[EXE STACK]: 
for( v = 0; v < 3 ; v = v + 1 ) { Fork((Print(v)|v = v + 1)) }
Print(v * 10)
[SYMBOL TABLE]: 
v -> 20
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:

[PROCESS ID]: 3
[EXE STACK]: 
(index = 0|while(index < 3){(Fork((Print(v)|v = v + 1))|index = v + 1)})
Print(v * 10)
[SYMBOL TABLE]: 
v -> 20
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:

[PROCESS ID]: 3
[EXE STACK]: 
(index = 0|while(index < 3){(Fork((Print(v)|v = v + 1))|index = v + 1)})
Print(v * 10)
[SYMBOL TABLE]: 
v -> 20
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:

[PROCESS ID]: 3
[EXE STACK]: 
index = 0
while(index < 3){(Fork((Print(v)|v = v + 1))|index = v + 1)}
Print(v * 10)
[SYMBOL TABLE]: 
v -> 20
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:

[PROCESS ID]: 3
[EXE STACK]: 
index = 0
while(index < 3){(Fork((Print(v)|v = v + 1))|index = v + 1)}
Print(v * 10)
[SYMBOL TABLE]: 
v -> 20
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:

[PROCESS ID]: 3
[EXE STACK]: 
while(index < 3){(Fork((Print(v)|v = v + 1))|index = v + 1)}
Print(v * 10)
[SYMBOL TABLE]: 
v -> 20
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:

[PROCESS ID]: 3
[EXE STACK]: 
while(index < 3){(Fork((Print(v)|v = v + 1))|index = v + 1)}
Print(v * 10)
[SYMBOL TABLE]: 
v -> 20
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:

[PROCESS ID]: 3
[EXE STACK]: 
Print(v * 10)
[SYMBOL TABLE]: 
v -> 20
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:

[PROCESS ID]: 3
[EXE STACK]: 
Print(v * 10)
[SYMBOL TABLE]: 
v -> 20
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:

[PROCESS ID]: 3
[EXE STACK]: 
[SYMBOL TABLE]: 
v -> 20
[OUTPUT LIST]: 
200
[FILE TABLE]:
[HEAP STORAGE]:

[PROCESS ID]: 4
[EXE STACK]: 
(int v|(v = 20|(for( v = 0; v < 3 ; v = v + 1 ) { Fork((Print(v)|v = v + 1)) }|Print(v * 10))))
[SYMBOL TABLE]: 
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:

[PROCESS ID]: 4
[EXE STACK]: 
int v
(v = 20|(for( v = 0; v < 3 ; v = v + 1 ) { Fork((Print(v)|v = v + 1)) }|Print(v * 10)))
[SYMBOL TABLE]: 
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:

[PROCESS ID]: 4
[EXE STACK]: 
int v
(v = 20|(for( v = 0; v < 3 ; v = v + 1 ) { Fork((Print(v)|v = v + 1)) }|Print(v * 10)))
[SYMBOL TABLE]: 
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:

[PROCESS ID]: 4
[EXE STACK]: 
(v = 20|(for( v = 0; v < 3 ; v = v + 1 ) { Fork((Print(v)|v = v + 1)) }|Print(v * 10)))
[SYMBOL TABLE]: 
v -> 0
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:

[PROCESS ID]: 4
[EXE STACK]: 
(v = 20|(for( v = 0; v < 3 ; v = v + 1 ) { Fork((Print(v)|v = v + 1)) }|Print(v * 10)))
[SYMBOL TABLE]: 
v -> 0
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:

[PROCESS ID]: 4
[EXE STACK]: 
v = 20
(for( v = 0; v < 3 ; v = v + 1 ) { Fork((Print(v)|v = v + 1)) }|Print(v * 10))
[SYMBOL TABLE]: 
v -> 0
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:

[PROCESS ID]: 4
[EXE STACK]: 
v = 20
(for( v = 0; v < 3 ; v = v + 1 ) { Fork((Print(v)|v = v + 1)) }|Print(v * 10))
[SYMBOL TABLE]: 
v -> 0
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:

[PROCESS ID]: 4
[EXE STACK]: 
(for( v = 0; v < 3 ; v = v + 1 ) { Fork((Print(v)|v = v + 1)) }|Print(v * 10))
[SYMBOL TABLE]: 
v -> 20
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:

[PROCESS ID]: 4
[EXE STACK]: 
(for( v = 0; v < 3 ; v = v + 1 ) { Fork((Print(v)|v = v + 1)) }|Print(v * 10))
[SYMBOL TABLE]: 
v -> 20
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:

[PROCESS ID]: 4
[EXE STACK]: 
for( v = 0; v < 3 ; v = v + 1 ) { Fork((Print(v)|v = v + 1)) }
Print(v * 10)
[SYMBOL TABLE]: 
v -> 20
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:

[PROCESS ID]: 4
[EXE STACK]: 
for( v = 0; v < 3 ; v = v + 1 ) { Fork((Print(v)|v = v + 1)) }
Print(v * 10)
[SYMBOL TABLE]: 
v -> 20
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:

[PROCESS ID]: 4
[EXE STACK]: 
(index = 0|while(index < 3){(Fork((Print(v)|v = v + 1))|index = v + 1)})
Print(v * 10)
[SYMBOL TABLE]: 
v -> 20
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:

[PROCESS ID]: 4
[EXE STACK]: 
(index = 0|while(index < 3){(Fork((Print(v)|v = v + 1))|index = v + 1)})
Print(v * 10)
[SYMBOL TABLE]: 
v -> 20
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:

[PROCESS ID]: 4
[EXE STACK]: 
index = 0
while(index < 3){(Fork((Print(v)|v = v + 1))|index = v + 1)}
Print(v * 10)
[SYMBOL TABLE]: 
v -> 20
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:

[PROCESS ID]: 4
[EXE STACK]: 
index = 0
while(index < 3){(Fork((Print(v)|v = v + 1))|index = v + 1)}
Print(v * 10)
[SYMBOL TABLE]: 
v -> 20
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:

[PROCESS ID]: 4
[EXE STACK]: 
while(index < 3){(Fork((Print(v)|v = v + 1))|index = v + 1)}
Print(v * 10)
[SYMBOL TABLE]: 
v -> 20
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:

[PROCESS ID]: 4
[EXE STACK]: 
while(index < 3){(Fork((Print(v)|v = v + 1))|index = v + 1)}
Print(v * 10)
[SYMBOL TABLE]: 
v -> 20
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:

[PROCESS ID]: 4
[EXE STACK]: 
Print(v * 10)
[SYMBOL TABLE]: 
v -> 20
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:

[PROCESS ID]: 4
[EXE STACK]: 
Print(v * 10)
[SYMBOL TABLE]: 
v -> 20
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:

[PROCESS ID]: 4
[EXE STACK]: 
[SYMBOL TABLE]: 
v -> 20
[OUTPUT LIST]: 
200
[FILE TABLE]:
[HEAP STORAGE]:

[PROCESS ID]: 1
[EXE STACK]: 
(int v|(v = 20|(for( v = 0; v < 3 ; v = v + 1 ) { Fork((Print(v)|v = v + 1)) }|Print(v * 10))))
[SYMBOL TABLE]: 
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:

[PROCESS ID]: 1
[EXE STACK]: 
int v
(v = 20|(for( v = 0; v < 3 ; v = v + 1 ) { Fork((Print(v)|v = v + 1)) }|Print(v * 10)))
[SYMBOL TABLE]: 
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:

[PROCESS ID]: 1
[EXE STACK]: 
int v
(v = 20|(for( v = 0; v < 3 ; v = v + 1 ) { Fork((Print(v)|v = v + 1)) }|Print(v * 10)))
[SYMBOL TABLE]: 
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:

[PROCESS ID]: 1
[EXE STACK]: 
(v = 20|(for( v = 0; v < 3 ; v = v + 1 ) { Fork((Print(v)|v = v + 1)) }|Print(v * 10)))
[SYMBOL TABLE]: 
v -> 0
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:

[PROCESS ID]: 1
[EXE STACK]: 
(v = 20|(for( v = 0; v < 3 ; v = v + 1 ) { Fork((Print(v)|v = v + 1)) }|Print(v * 10)))
[SYMBOL TABLE]: 
v -> 0
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:

[PROCESS ID]: 1
[EXE STACK]: 
v = 20
(for( v = 0; v < 3 ; v = v + 1 ) { Fork((Print(v)|v = v + 1)) }|Print(v * 10))
[SYMBOL TABLE]: 
v -> 0
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:

[PROCESS ID]: 1
[EXE STACK]: 
v = 20
(for( v = 0; v < 3 ; v = v + 1 ) { Fork((Print(v)|v = v + 1)) }|Print(v * 10))
[SYMBOL TABLE]: 
v -> 0
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:

[PROCESS ID]: 1
[EXE STACK]: 
(for( v = 0; v < 3 ; v = v + 1 ) { Fork((Print(v)|v = v + 1)) }|Print(v * 10))
[SYMBOL TABLE]: 
v -> 20
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:

[PROCESS ID]: 1
[EXE STACK]: 
(for( v = 0; v < 3 ; v = v + 1 ) { Fork((Print(v)|v = v + 1)) }|Print(v * 10))
[SYMBOL TABLE]: 
v -> 20
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:

[PROCESS ID]: 1
[EXE STACK]: 
for( v = 0; v < 3 ; v = v + 1 ) { Fork((Print(v)|v = v + 1)) }
Print(v * 10)
[SYMBOL TABLE]: 
v -> 20
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:

[PROCESS ID]: 1
[EXE STACK]: 
for( v = 0; v < 3 ; v = v + 1 ) { Fork((Print(v)|v = v + 1)) }
Print(v * 10)
[SYMBOL TABLE]: 
v -> 20
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:

[PROCESS ID]: 1
[EXE STACK]: 
(index = 0|while(index < 3){(Fork((Print(v)|v = v + 1))|index = v + 1)})
Print(v * 10)
[SYMBOL TABLE]: 
v -> 20
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:

[PROCESS ID]: 1
[EXE STACK]: 
(index = 0|while(index < 3){(Fork((Print(v)|v = v + 1))|index = v + 1)})
Print(v * 10)
[SYMBOL TABLE]: 
v -> 20
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:

[PROCESS ID]: 1
[EXE STACK]: 
index = 0
while(index < 3){(Fork((Print(v)|v = v + 1))|index = v + 1)}
Print(v * 10)
[SYMBOL TABLE]: 
v -> 20
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:

[PROCESS ID]: 1
[EXE STACK]: 
index = 0
while(index < 3){(Fork((Print(v)|v = v + 1))|index = v + 1)}
Print(v * 10)
[SYMBOL TABLE]: 
v -> 20
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:

[PROCESS ID]: 1
[EXE STACK]: 
while(index < 3){(Fork((Print(v)|v = v + 1))|index = v + 1)}
Print(v * 10)
[SYMBOL TABLE]: 
v -> 20
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:

[PROCESS ID]: 1
[EXE STACK]: 
while(index < 3){(Fork((Print(v)|v = v + 1))|index = v + 1)}
Print(v * 10)
[SYMBOL TABLE]: 
v -> 20
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:

[PROCESS ID]: 1
[EXE STACK]: 
Print(v * 10)
[SYMBOL TABLE]: 
v -> 20
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:

[PROCESS ID]: 1
[EXE STACK]: 
Print(v * 10)
[SYMBOL TABLE]: 
v -> 20
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:

[PROCESS ID]: 1
[EXE STACK]: 
[SYMBOL TABLE]: 
v -> 20
[OUTPUT LIST]: 
200
[FILE TABLE]:
[HEAP STORAGE]:

[PROCESS ID]: 1
[EXE STACK]: 
(int v|(v = 20|(for( v = 0; v < 3 ; v = v + 1 ) { Fork((Print(v)|v = v + 1)) }|Print(v * 10))))
[SYMBOL TABLE]: 
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:

[PROCESS ID]: 1
[EXE STACK]: 
int v
(v = 20|(for( v = 0; v < 3 ; v = v + 1 ) { Fork((Print(v)|v = v + 1)) }|Print(v * 10)))
[SYMBOL TABLE]: 
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:

[PROCESS ID]: 1
[EXE STACK]: 
int v
(v = 20|(for( v = 0; v < 3 ; v = v + 1 ) { Fork((Print(v)|v = v + 1)) }|Print(v * 10)))
[SYMBOL TABLE]: 
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:

[PROCESS ID]: 1
[EXE STACK]: 
(v = 20|(for( v = 0; v < 3 ; v = v + 1 ) { Fork((Print(v)|v = v + 1)) }|Print(v * 10)))
[SYMBOL TABLE]: 
v -> 0
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:

[PROCESS ID]: 1
[EXE STACK]: 
(v = 20|(for( v = 0; v < 3 ; v = v + 1 ) { Fork((Print(v)|v = v + 1)) }|Print(v * 10)))
[SYMBOL TABLE]: 
v -> 0
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:

[PROCESS ID]: 1
[EXE STACK]: 
v = 20
(for( v = 0; v < 3 ; v = v + 1 ) { Fork((Print(v)|v = v + 1)) }|Print(v * 10))
[SYMBOL TABLE]: 
v -> 0
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:

[PROCESS ID]: 1
[EXE STACK]: 
v = 20
(for( v = 0; v < 3 ; v = v + 1 ) { Fork((Print(v)|v = v + 1)) }|Print(v * 10))
[SYMBOL TABLE]: 
v -> 0
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:

[PROCESS ID]: 1
[EXE STACK]: 
(for( v = 0; v < 3 ; v = v + 1 ) { Fork((Print(v)|v = v + 1)) }|Print(v * 10))
[SYMBOL TABLE]: 
v -> 20
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:

[PROCESS ID]: 1
[EXE STACK]: 
(for( v = 0; v < 3 ; v = v + 1 ) { Fork((Print(v)|v = v + 1)) }|Print(v * 10))
[SYMBOL TABLE]: 
v -> 20
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:

[PROCESS ID]: 1
[EXE STACK]: 
for( v = 0; v < 3 ; v = v + 1 ) { Fork((Print(v)|v = v + 1)) }
Print(v * 10)
[SYMBOL TABLE]: 
v -> 20
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:

[PROCESS ID]: 1
[EXE STACK]: 
for( v = 0; v < 3 ; v = v + 1 ) { Fork((Print(v)|v = v + 1)) }
Print(v * 10)
[SYMBOL TABLE]: 
v -> 20
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:

[PROCESS ID]: 1
[EXE STACK]: 
(index = 0|while(index < 3){(Fork((Print(v)|v = v + 1))|index = v + 1)})
Print(v * 10)
[SYMBOL TABLE]: 
v -> 20
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:

[PROCESS ID]: 1
[EXE STACK]: 
(index = 0|while(index < 3){(Fork((Print(v)|v = v + 1))|index = v + 1)})
Print(v * 10)
[SYMBOL TABLE]: 
v -> 20
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:

[PROCESS ID]: 1
[EXE STACK]: 
index = 0
while(index < 3){(Fork((Print(v)|v = v + 1))|index = v + 1)}
Print(v * 10)
[SYMBOL TABLE]: 
v -> 20
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:

[PROCESS ID]: 1
[EXE STACK]: 
index = 0
while(index < 3){(Fork((Print(v)|v = v + 1))|index = v + 1)}
Print(v * 10)
[SYMBOL TABLE]: 
v -> 20
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:

[PROCESS ID]: 1
[EXE STACK]: 
while(index < 3){(Fork((Print(v)|v = v + 1))|index = v + 1)}
Print(v * 10)
[SYMBOL TABLE]: 
v -> 20
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:

[PROCESS ID]: 1
[EXE STACK]: 
while(index < 3){(Fork((Print(v)|v = v + 1))|index = v + 1)}
Print(v * 10)
[SYMBOL TABLE]: 
v -> 20
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:

[PROCESS ID]: 1
[EXE STACK]: 
Print(v * 10)
[SYMBOL TABLE]: 
v -> 20
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:

[PROCESS ID]: 1
[EXE STACK]: 
Print(v * 10)
[SYMBOL TABLE]: 
v -> 20
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:

[PROCESS ID]: 1
[EXE STACK]: 
[SYMBOL TABLE]: 
v -> 20
[OUTPUT LIST]: 
200
[FILE TABLE]:
[HEAP STORAGE]:

[PROCESS ID]: 1
[EXE STACK]: 
(int v|(v = 20|(for( v = 0; v < 3 ; v = v + 1 ) { Fork((Print(v)|v = v + 1)) }|Print(v * 10))))
[SYMBOL TABLE]: 
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:

[PROCESS ID]: 1
[EXE STACK]: 
int v
(v = 20|(for( v = 0; v < 3 ; v = v + 1 ) { Fork((Print(v)|v = v + 1)) }|Print(v * 10)))
[SYMBOL TABLE]: 
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:

[PROCESS ID]: 1
[EXE STACK]: 
int v
(v = 20|(for( v = 0; v < 3 ; v = v + 1 ) { Fork((Print(v)|v = v + 1)) }|Print(v * 10)))
[SYMBOL TABLE]: 
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:

[PROCESS ID]: 1
[EXE STACK]: 
(v = 20|(for( v = 0; v < 3 ; v = v + 1 ) { Fork((Print(v)|v = v + 1)) }|Print(v * 10)))
[SYMBOL TABLE]: 
v -> 0
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:

[PROCESS ID]: 1
[EXE STACK]: 
(v = 20|(for( v = 0; v < 3 ; v = v + 1 ) { Fork((Print(v)|v = v + 1)) }|Print(v * 10)))
[SYMBOL TABLE]: 
v -> 0
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:

[PROCESS ID]: 1
[EXE STACK]: 
v = 20
(for( v = 0; v < 3 ; v = v + 1 ) { Fork((Print(v)|v = v + 1)) }|Print(v * 10))
[SYMBOL TABLE]: 
v -> 0
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:

[PROCESS ID]: 1
[EXE STACK]: 
v = 20
(for( v = 0; v < 3 ; v = v + 1 ) { Fork((Print(v)|v = v + 1)) }|Print(v * 10))
[SYMBOL TABLE]: 
v -> 0
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:

[PROCESS ID]: 1
[EXE STACK]: 
(for( v = 0; v < 3 ; v = v + 1 ) { Fork((Print(v)|v = v + 1)) }|Print(v * 10))
[SYMBOL TABLE]: 
v -> 20
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:

[PROCESS ID]: 1
[EXE STACK]: 
(for( v = 0; v < 3 ; v = v + 1 ) { Fork((Print(v)|v = v + 1)) }|Print(v * 10))
[SYMBOL TABLE]: 
v -> 20
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:

[PROCESS ID]: 1
[EXE STACK]: 
for( v = 0; v < 3 ; v = v + 1 ) { Fork((Print(v)|v = v + 1)) }
Print(v * 10)
[SYMBOL TABLE]: 
v -> 20
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:

[PROCESS ID]: 1
[EXE STACK]: 
for( v = 0; v < 3 ; v = v + 1 ) { Fork((Print(v)|v = v + 1)) }
Print(v * 10)
[SYMBOL TABLE]: 
v -> 20
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:

[PROCESS ID]: 1
[EXE STACK]: 
(index = 0|while(index < 3){(Fork((Print(v)|v = v + 1))|index = v + 1)})
Print(v * 10)
[SYMBOL TABLE]: 
v -> 20
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:

[PROCESS ID]: 1
[EXE STACK]: 
(index = 0|while(index < 3){(Fork((Print(v)|v = v + 1))|index = v + 1)})
Print(v * 10)
[SYMBOL TABLE]: 
v -> 20
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:

[PROCESS ID]: 1
[EXE STACK]: 
index = 0
while(index < 3){(Fork((Print(v)|v = v + 1))|index = v + 1)}
Print(v * 10)
[SYMBOL TABLE]: 
v -> 20
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:

[PROCESS ID]: 1
[EXE STACK]: 
index = 0
while(index < 3){(Fork((Print(v)|v = v + 1))|index = v + 1)}
Print(v * 10)
[SYMBOL TABLE]: 
v -> 20
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:

[PROCESS ID]: 1
[EXE STACK]: 
while(index < 3){(Fork((Print(v)|v = v + 1))|index = v + 1)}
Print(v * 10)
[SYMBOL TABLE]: 
v -> 20
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:

[PROCESS ID]: 1
[EXE STACK]: 
while(index < 3){(Fork((Print(v)|v = v + 1))|index = v + 1)}
Print(v * 10)
[SYMBOL TABLE]: 
v -> 20
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:

[PROCESS ID]: 1
[EXE STACK]: 
Print(v * 10)
[SYMBOL TABLE]: 
v -> 20
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:

[PROCESS ID]: 1
[EXE STACK]: 
Print(v * 10)
[SYMBOL TABLE]: 
v -> 20
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:

[PROCESS ID]: 1
[EXE STACK]: 
[SYMBOL TABLE]: 
v -> 20
[OUTPUT LIST]: 
200
[FILE TABLE]:
[HEAP STORAGE]:

[PROCESS ID]: 1
[EXE STACK]: 
(int v|(v = 20|(for(v=0; v<3; v=v + 1) {Fork((Print(v)|v = v + 1))}|Print(v * 10))))
[SYMBOL TABLE]: 
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:

[PROCESS ID]: 1
[EXE STACK]: 
int v
(v = 20|(for(v=0; v<3; v=v + 1) {Fork((Print(v)|v = v + 1))}|Print(v * 10)))
[SYMBOL TABLE]: 
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:

[PROCESS ID]: 1
[EXE STACK]: 
int v
(v = 20|(for(v=0; v<3; v=v + 1) {Fork((Print(v)|v = v + 1))}|Print(v * 10)))
[SYMBOL TABLE]: 
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:

[PROCESS ID]: 1
[EXE STACK]: 
(v = 20|(for(v=0; v<3; v=v + 1) {Fork((Print(v)|v = v + 1))}|Print(v * 10)))
[SYMBOL TABLE]: 
v -> 0
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:

[PROCESS ID]: 1
[EXE STACK]: 
(v = 20|(for(v=0; v<3; v=v + 1) {Fork((Print(v)|v = v + 1))}|Print(v * 10)))
[SYMBOL TABLE]: 
v -> 0
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:

[PROCESS ID]: 1
[EXE STACK]: 
v = 20
(for(v=0; v<3; v=v + 1) {Fork((Print(v)|v = v + 1))}|Print(v * 10))
[SYMBOL TABLE]: 
v -> 0
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:

[PROCESS ID]: 1
[EXE STACK]: 
v = 20
(for(v=0; v<3; v=v + 1) {Fork((Print(v)|v = v + 1))}|Print(v * 10))
[SYMBOL TABLE]: 
v -> 0
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:

[PROCESS ID]: 1
[EXE STACK]: 
(for(v=0; v<3; v=v + 1) {Fork((Print(v)|v = v + 1))}|Print(v * 10))
[SYMBOL TABLE]: 
v -> 20
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:

[PROCESS ID]: 1
[EXE STACK]: 
(for(v=0; v<3; v=v + 1) {Fork((Print(v)|v = v + 1))}|Print(v * 10))
[SYMBOL TABLE]: 
v -> 20
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:

[PROCESS ID]: 1
[EXE STACK]: 
for(v=0; v<3; v=v + 1) {Fork((Print(v)|v = v + 1))}
Print(v * 10)
[SYMBOL TABLE]: 
v -> 20
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:

[PROCESS ID]: 1
[EXE STACK]: 
for(v=0; v<3; v=v + 1) {Fork((Print(v)|v = v + 1))}
Print(v * 10)
[SYMBOL TABLE]: 
v -> 20
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:

[PROCESS ID]: 1
[EXE STACK]: 
(v = 0|while(v < 3){(Fork((Print(v)|v = v + 1))|v = v + 1)})
Print(v * 10)
[SYMBOL TABLE]: 
v -> 20
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:

[PROCESS ID]: 1
[EXE STACK]: 
(v = 0|while(v < 3){(Fork((Print(v)|v = v + 1))|v = v + 1)})
Print(v * 10)
[SYMBOL TABLE]: 
v -> 20
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:

[PROCESS ID]: 1
[EXE STACK]: 
v = 0
while(v < 3){(Fork((Print(v)|v = v + 1))|v = v + 1)}
Print(v * 10)
[SYMBOL TABLE]: 
v -> 20
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:

[PROCESS ID]: 1
[EXE STACK]: 
v = 0
while(v < 3){(Fork((Print(v)|v = v + 1))|v = v + 1)}
Print(v * 10)
[SYMBOL TABLE]: 
v -> 20
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:

[PROCESS ID]: 1
[EXE STACK]: 
while(v < 3){(Fork((Print(v)|v = v + 1))|v = v + 1)}
Print(v * 10)
[SYMBOL TABLE]: 
v -> 0
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:

[PROCESS ID]: 1
[EXE STACK]: 
while(v < 3){(Fork((Print(v)|v = v + 1))|v = v + 1)}
Print(v * 10)
[SYMBOL TABLE]: 
v -> 0
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:

[PROCESS ID]: 1
[EXE STACK]: 
(Fork((Print(v)|v = v + 1))|v = v + 1)
while(v < 3){(Fork((Print(v)|v = v + 1))|v = v + 1)}
Print(v * 10)
[SYMBOL TABLE]: 
v -> 0
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:

[PROCESS ID]: 1
[EXE STACK]: 
(Fork((Print(v)|v = v + 1))|v = v + 1)
while(v < 3){(Fork((Print(v)|v = v + 1))|v = v + 1)}
Print(v * 10)
[SYMBOL TABLE]: 
v -> 0
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:

[PROCESS ID]: 1
[EXE STACK]: 
Fork((Print(v)|v = v + 1))
v = v + 1
while(v < 3){(Fork((Print(v)|v = v + 1))|v = v + 1)}
Print(v * 10)
[SYMBOL TABLE]: 
v -> 0
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:

[PROCESS ID]: 1
[EXE STACK]: 
Fork((Print(v)|v = v + 1))
v = v + 1
while(v < 3){(Fork((Print(v)|v = v + 1))|v = v + 1)}
Print(v * 10)
[SYMBOL TABLE]: 
v -> 0
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:

[PROCESS ID]: 1
[EXE STACK]: 
v = v + 1
while(v < 3){(Fork((Print(v)|v = v + 1))|v = v + 1)}
Print(v * 10)
[SYMBOL TABLE]: 
v -> 0
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:

[PROCESS ID]: 2
[EXE STACK]: 
(Print(v)|v = v + 1)
[SYMBOL TABLE]: 
v -> 0
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:

[PROCESS ID]: 1
[EXE STACK]: 
v = v + 1
while(v < 3){(Fork((Print(v)|v = v + 1))|v = v + 1)}
Print(v * 10)
[SYMBOL TABLE]: 
v -> 0
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:

[PROCESS ID]: 2
[EXE STACK]: 
(Print(v)|v = v + 1)
[SYMBOL TABLE]: 
v -> 0
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:

[PROCESS ID]: 1
[EXE STACK]: 
while(v < 3){(Fork((Print(v)|v = v + 1))|v = v + 1)}
Print(v * 10)
[SYMBOL TABLE]: 
v -> 1
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:

[PROCESS ID]: 2
[EXE STACK]: 
Print(v)
v = v + 1
[SYMBOL TABLE]: 
v -> 0
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:

[PROCESS ID]: 1
[EXE STACK]: 
while(v < 3){(Fork((Print(v)|v = v + 1))|v = v + 1)}
Print(v * 10)
[SYMBOL TABLE]: 
v -> 1
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:

[PROCESS ID]: 2
[EXE STACK]: 
Print(v)
v = v + 1
[SYMBOL TABLE]: 
v -> 0
[OUTPUT LIST]: 
[FILE TABLE]:
[HEAP STORAGE]:

[PROCESS ID]: 1
[EXE STACK]: 
(Fork((Print(v)|v = v + 1))|v = v + 1)
while(v < 3){(Fork((Print(v)|v = v + 1))|v = v + 1)}
Print(v * 10)
[SYMBOL TABLE]: 
v -> 1
[OUTPUT LIST]: 
0
[FILE TABLE]:
[HEAP STORAGE]:

[PROCESS ID]: 2
[EXE STACK]: 
v = v + 1
[SYMBOL TABLE]: 
v -> 0
[OUTPUT LIST]: 
0
[FILE TABLE]:
[HEAP STORAGE]:

[PROCESS ID]: 1
[EXE STACK]: 
(Fork((Print(v)|v = v + 1))|v = v + 1)
while(v < 3){(Fork((Print(v)|v = v + 1))|v = v + 1)}
Print(v * 10)
[SYMBOL TABLE]: 
v -> 1
[OUTPUT LIST]: 
0
[FILE TABLE]:
[HEAP STORAGE]:

[PROCESS ID]: 2
[EXE STACK]: 
v = v + 1
[SYMBOL TABLE]: 
v -> 0
[OUTPUT LIST]: 
0
[FILE TABLE]:
[HEAP STORAGE]:

[PROCESS ID]: 1
[EXE STACK]: 
Fork((Print(v)|v = v + 1))
v = v + 1
while(v < 3){(Fork((Print(v)|v = v + 1))|v = v + 1)}
Print(v * 10)
[SYMBOL TABLE]: 
v -> 1
[OUTPUT LIST]: 
0
[FILE TABLE]:
[HEAP STORAGE]:

[PROCESS ID]: 2
[EXE STACK]: 
[SYMBOL TABLE]: 
v -> 1
[OUTPUT LIST]: 
0
[FILE TABLE]:
[HEAP STORAGE]:

[PROCESS ID]: 1
[EXE STACK]: 
Fork((Print(v)|v = v + 1))
v = v + 1
while(v < 3){(Fork((Print(v)|v = v + 1))|v = v + 1)}
Print(v * 10)
[SYMBOL TABLE]: 
v -> 1
[OUTPUT LIST]: 
0
[FILE TABLE]:
[HEAP STORAGE]:

[PROCESS ID]: 1
[EXE STACK]: 
v = v + 1
while(v < 3){(Fork((Print(v)|v = v + 1))|v = v + 1)}
Print(v * 10)
[SYMBOL TABLE]: 
v -> 1
[OUTPUT LIST]: 
0
[FILE TABLE]:
[HEAP STORAGE]:

[PROCESS ID]: 3
[EXE STACK]: 
(Print(v)|v = v + 1)
[SYMBOL TABLE]: 
v -> 1
[OUTPUT LIST]: 
0
[FILE TABLE]:
[HEAP STORAGE]:

[PROCESS ID]: 1
[EXE STACK]: 
v = v + 1
while(v < 3){(Fork((Print(v)|v = v + 1))|v = v + 1)}
Print(v * 10)
[SYMBOL TABLE]: 
v -> 1
[OUTPUT LIST]: 
0
[FILE TABLE]:
[HEAP STORAGE]:

[PROCESS ID]: 3
[EXE STACK]: 
(Print(v)|v = v + 1)
[SYMBOL TABLE]: 
v -> 1
[OUTPUT LIST]: 
0
[FILE TABLE]:
[HEAP STORAGE]:

[PROCESS ID]: 1
[EXE STACK]: 
while(v < 3){(Fork((Print(v)|v = v + 1))|v = v + 1)}
Print(v * 10)
[SYMBOL TABLE]: 
v -> 2
[OUTPUT LIST]: 
0
[FILE TABLE]:
[HEAP STORAGE]:

[PROCESS ID]: 3
[EXE STACK]: 
Print(v)
v = v + 1
[SYMBOL TABLE]: 
v -> 1
[OUTPUT LIST]: 
0
[FILE TABLE]:
[HEAP STORAGE]:

[PROCESS ID]: 1
[EXE STACK]: 
while(v < 3){(Fork((Print(v)|v = v + 1))|v = v + 1)}
Print(v * 10)
[SYMBOL TABLE]: 
v -> 2
[OUTPUT LIST]: 
0
[FILE TABLE]:
[HEAP STORAGE]:

[PROCESS ID]: 3
[EXE STACK]: 
Print(v)
v = v + 1
[SYMBOL TABLE]: 
v -> 1
[OUTPUT LIST]: 
0
[FILE TABLE]:
[HEAP STORAGE]:

[PROCESS ID]: 1
[EXE STACK]: 
(Fork((Print(v)|v = v + 1))|v = v + 1)
while(v < 3){(Fork((Print(v)|v = v + 1))|v = v + 1)}
Print(v * 10)
[SYMBOL TABLE]: 
v -> 2
[OUTPUT LIST]: 
0
1
[FILE TABLE]:
[HEAP STORAGE]:

[PROCESS ID]: 3
[EXE STACK]: 
v = v + 1
[SYMBOL TABLE]: 
v -> 1
[OUTPUT LIST]: 
0
1
[FILE TABLE]:
[HEAP STORAGE]:

[PROCESS ID]: 1
[EXE STACK]: 
(Fork((Print(v)|v = v + 1))|v = v + 1)
while(v < 3){(Fork((Print(v)|v = v + 1))|v = v + 1)}
Print(v * 10)
[SYMBOL TABLE]: 
v -> 2
[OUTPUT LIST]: 
0
1
[FILE TABLE]:
[HEAP STORAGE]:

[PROCESS ID]: 3
[EXE STACK]: 
v = v + 1
[SYMBOL TABLE]: 
v -> 1
[OUTPUT LIST]: 
0
1
[FILE TABLE]:
[HEAP STORAGE]:

[PROCESS ID]: 1
[EXE STACK]: 
Fork((Print(v)|v = v + 1))
v = v + 1
while(v < 3){(Fork((Print(v)|v = v + 1))|v = v + 1)}
Print(v * 10)
[SYMBOL TABLE]: 
v -> 2
[OUTPUT LIST]: 
0
1
[FILE TABLE]:
[HEAP STORAGE]:

[PROCESS ID]: 3
[EXE STACK]: 
[SYMBOL TABLE]: 
v -> 2
[OUTPUT LIST]: 
0
1
[FILE TABLE]:
[HEAP STORAGE]:

[PROCESS ID]: 1
[EXE STACK]: 
Fork((Print(v)|v = v + 1))
v = v + 1
while(v < 3){(Fork((Print(v)|v = v + 1))|v = v + 1)}
Print(v * 10)
[SYMBOL TABLE]: 
v -> 2
[OUTPUT LIST]: 
0
1
[FILE TABLE]:
[HEAP STORAGE]:

[PROCESS ID]: 1
[EXE STACK]: 
v = v + 1
while(v < 3){(Fork((Print(v)|v = v + 1))|v = v + 1)}
Print(v * 10)
[SYMBOL TABLE]: 
v -> 2
[OUTPUT LIST]: 
0
1
[FILE TABLE]:
[HEAP STORAGE]:

[PROCESS ID]: 4
[EXE STACK]: 
(Print(v)|v = v + 1)
[SYMBOL TABLE]: 
v -> 2
[OUTPUT LIST]: 
0
1
[FILE TABLE]:
[HEAP STORAGE]:

[PROCESS ID]: 1
[EXE STACK]: 
v = v + 1
while(v < 3){(Fork((Print(v)|v = v + 1))|v = v + 1)}
Print(v * 10)
[SYMBOL TABLE]: 
v -> 2
[OUTPUT LIST]: 
0
1
[FILE TABLE]:
[HEAP STORAGE]:

[PROCESS ID]: 4
[EXE STACK]: 
(Print(v)|v = v + 1)
[SYMBOL TABLE]: 
v -> 2
[OUTPUT LIST]: 
0
1
[FILE TABLE]:
[HEAP STORAGE]:

[PROCESS ID]: 1
[EXE STACK]: 
while(v < 3){(Fork((Print(v)|v = v + 1))|v = v + 1)}
Print(v * 10)
[SYMBOL TABLE]: 
v -> 3
[OUTPUT LIST]: 
0
1
[FILE TABLE]:
[HEAP STORAGE]:

[PROCESS ID]: 4
[EXE STACK]: 
Print(v)
v = v + 1
[SYMBOL TABLE]: 
v -> 2
[OUTPUT LIST]: 
0
1
[FILE TABLE]:
[HEAP STORAGE]:

[PROCESS ID]: 1
[EXE STACK]: 
while(v < 3){(Fork((Print(v)|v = v + 1))|v = v + 1)}
Print(v * 10)
[SYMBOL TABLE]: 
v -> 3
[OUTPUT LIST]: 
0
1
[FILE TABLE]:
[HEAP STORAGE]:

[PROCESS ID]: 4
[EXE STACK]: 
Print(v)
v = v + 1
[SYMBOL TABLE]: 
v -> 2
[OUTPUT LIST]: 
0
1
[FILE TABLE]:
[HEAP STORAGE]:

[PROCESS ID]: 1
[EXE STACK]: 
Print(v * 10)
[SYMBOL TABLE]: 
v -> 3
[OUTPUT LIST]: 
0
1
2
[FILE TABLE]:
[HEAP STORAGE]:

[PROCESS ID]: 4
[EXE STACK]: 
v = v + 1
[SYMBOL TABLE]: 
v -> 2
[OUTPUT LIST]: 
0
1
2
[FILE TABLE]:
[HEAP STORAGE]:

[PROCESS ID]: 1
[EXE STACK]: 
Print(v * 10)
[SYMBOL TABLE]: 
v -> 3
[OUTPUT LIST]: 
0
1
2
[FILE TABLE]:
[HEAP STORAGE]:

[PROCESS ID]: 4
[EXE STACK]: 
v = v + 1
[SYMBOL TABLE]: 
v -> 2
[OUTPUT LIST]: 
0
1
2
[FILE TABLE]:
[HEAP STORAGE]:

[PROCESS ID]: 1
[EXE STACK]: 
[SYMBOL TABLE]: 
v -> 3
[OUTPUT LIST]: 
0
1
2
30
[FILE TABLE]:
[HEAP STORAGE]:

[PROCESS ID]: 4
[EXE STACK]: 
[SYMBOL TABLE]: 
v -> 3
[OUTPUT LIST]: 
0
1
2
30
[FILE TABLE]:
[HEAP STORAGE]:

