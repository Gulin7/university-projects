     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  
     6                                  ; declare external functions needed by our program
     7                                  extern exit, printf, scanf, fopen, fclose, fscanf, fread
     8                                  import exit msvcrt.dll
     9                                  import printf msvcrt.dll
    10                                  import scanf msvcrt.dll
    11                                  import fopen msvcrt.dll
    12                                  import fclose msvcrt.dll
    13                                  import fscanf msvcrt.dll
    14                                  import fread msvcrt.dll
    15                                  
    16                                  ; our data is declared here (the variables needed by our program)
    17                                  segment data use32 class=data
    18                                      ; A text file is given. Read the content of the file, determine the lowercase letter with the highest frequency and display the letter along with its frequency on the screen. The name of text file is defined in 
    19                                      ; our code starts here
    20 00000000 676976656E5F66696C-         input_file db 'given_file.txt', 0
    20 00000009 652E74787400       
    21 0000000F 7200                        modread db 'r', 0
    22 00000011 FFFFFFFF                    handle1 dd -1
    23 00000015 257300                      format db '%s', 0
    24 00000018 00<rept>                    lowercase_letters times 31 db 0
    25 00000037 <res 00000001>              letter resb 1
    26 00000038 00                          highest_frequency db 0
    27 00000039 <res 00000001>              highest_frequency_letter resb 1
    28 0000003A 546865206869676865-         print_format db 'The highest frequency lowercase is: %s , having the frequency %d', 0
    28 00000043 737420667265717565-
    28 0000004C 6E6379206C6F776572-
    28 00000055 636173652069733A20-
    28 0000005E 2573202C2068617669-
    28 00000067 6E6720746865206672-
    28 00000070 657175656E63792025-
    28 00000079 6400               
    29                                      
    30                                  segment code use32 class=code
    31                                      start:
    32                                          ; OPEN AN INPUT_FILE WITH READ MODE
    33 00000000 68[0F000000]                    push dword modread
    34 00000005 68[00000000]                    push dword input_file
    35 0000000A FF15[00000000]                  call [fopen]
    36 00000010 83C408                          add esp, 4*2
    37 00000013 A3[11000000]                    mov [handle1], EAX
    38 00000018 83F800                          cmp EAX, 0
    39 0000001B 0F848D000000                    je the_end
    40                                          ; READ THE CONTENTS OF THE FILE
    41                                          repeat1:
    42 00000021 FF35[11000000]                  push dword[handle1]
    43 00000027 6A01                            push dword 1
    44 00000029 6A01                            push dword 1
    45 0000002B 68[37000000]                    push dword letter
    46 00000030 FF15[00000000]                  call [fread]
    47 00000036 83C410                          add esp, 4*4
    48 00000039 83F800                          cmp eax, 0
    49 0000003C 7424                            je error
    50                                          ; see if letter is lowercase
    51 0000003E 803D[37000000]61                cmp byte[letter], 97
    52 00000045 7219                            jb not_lowercase
    53 00000047 803D[37000000]7A                cmp byte[letter], 122
    54 0000004E 7710                            ja not_lowercase
    55                                          ; add 1 to letter['actual_letter_in_ascii']
    56 00000050 8B15[37000000]                  mov edx, [letter]
    57 00000056 83EA61                          sub edx, 97
    58 00000059 8082[18000000]01                add byte[lowercase_letters+edx], 1
    59                                          not_lowercase:
    60 00000060 EBBF                            jmp repeat1
    61                                          ;
    62                                          error:
    63 00000062 FF35[11000000]                  push dword [handle1]
    64 00000068 FF15[00000000]                  call [fclose]
    65 0000006E 83C404                          add esp, 4*1
    66                                          ;
    67                                          ; parse through lowercase_letters
    68 00000071 B91F000000                      mov ecx, 31
    69 00000076 B21F                            mov dl, 31
    70                                          parseinput:
    71 00000078 A0[38000000]                    mov al, [highest_frequency]
    72 0000007D 3881[18000000]                  cmp byte[ecx+lowercase_letters], al
    73 00000083 720A                            jb not_frequent; jump below
    74                                          ;mov highest_frequency, byte[ecx+lowercase_letters]
    75 00000085 B361                            mov bl, 'a'
    76 00000087 00D3                            add bl, dl
    77 00000089 881D[39000000]                  mov byte[highest_frequency_letter], bl
    78                                          not_frequent:
    79 0000008F 80EA01                          sub dl, 1
    80 00000092 E2E4                            loop parseinput
    81                                          ;print the highest_frequency_letter
    82 00000094 FF35[38000000]                  push dword [highest_frequency]
    83 0000009A FF35[39000000]                  push dword [highest_frequency_letter]
    84 000000A0 68[3A000000]                    push dword print_format
    85 000000A5 FF15[00000000]                  call [printf]
    86 000000AB 83C40C                          add esp, 4*3
    87                                          ;the_end is for errors along the code
    88                                          the_end:
    89                                          ; exit(0)
    90 000000AE 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    91 000000B0 FF15[00000000]                  call    [exit]       ; call exit to terminate the program
