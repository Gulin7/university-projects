     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  
     6                                  ; declare external functions needed by our program
     7                                  extern exit, suma, printf              ; tell nasm that exit exists even if we won't be defining it
     8                                  import exit msvcrt.dll    ; exit is a function that ends the calling process. It is defined in msvcrt.dll
     9                                                            ; msvcrt.dll contains exit, printf and all the other important C-runtime specific functions
    10                                  import printf msvcrt.dll
    11                                  ; our data is declared here (the variables needed by our program)
    12                                  segment data use32 class=data
    13 00000000 5468652073756D2069-         format db "The sum is %d !",0
    13 00000009 73202564202100     
    14                                  
    15                                  ; our code starts here
    16                                  segment code use32 class=code
    17                                      start:
    18 00000000 B902000000                      mov ecx, 2
    19 00000005 BA02000000                      mov edx, 2
    20 0000000A E8(00000000)                    call suma
    21 0000000F 53                              push ebx
    22 00000010 68[00000000]                    push format
    23 00000015 FF15[00000000]                  call [printf]
    24 0000001B 83C408                          add esp, 4*2
    25                                      
    26                                          ; exit(0)
    27 0000001E 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    28 00000020 FF15[00000000]                  call    [exit]       ; call exit to terminate the program
