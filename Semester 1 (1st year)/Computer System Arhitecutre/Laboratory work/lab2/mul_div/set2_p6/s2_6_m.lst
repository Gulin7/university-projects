     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  
     6                                  ; declare external functions needed by our program
     7                                  extern exit               ; tell nasm that exit exists even if we won't be defining it
     8                                  import exit msvcrt.dll    ; exit is a function that ends the calling process. It is defined in msvcrt.dll
     9                                                            ; msvcrt.dll contains exit, printf and all the other important C-runtime specific functions
    10                                  
    11                                  ; our data is declared here (the variables needed by our program)
    12                                  segment data use32 class=data
    13                                      ; a,b,c,d-byte, e,f,g,h-word
    14 00000000 07                          a db 7
    15 00000001 18                          b db 24
    16 00000002 06                          c db 6
    17                                  
    18                                  
    19                                  ; our code starts here
    20                                  segment code use32 class=code
    21                                      start:
    22                                          ; (a*b)/c
    23                                          ; a= 7, b=24, c=6 => 28
    24 00000000 A0[00000000]                    mov al, byte[a]
    25 00000005 8A1D[01000000]                  mov bl, byte[b]
    26 0000000B F6EB                            imul bl
    27                                          ; the result of a*b is stored in AX
    28 0000000D 8A1D[02000000]                  mov BL, byte[c]
    29 00000013 F6FB                            idiv BL ; this divides AX with BL; the final result is stored on AL
    30                                      
    31                                          ; exit(0)
    32 00000015 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    33 00000017 FF15[00000000]                  call    [exit]       ; call exit to terminate the program
