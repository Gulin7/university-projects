     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  
     6                                  ; declare external functions needed by our program
     7                                  extern exit, printf               ; tell nasm that exit exists even if we won't be defining it
     8                                  import exit msvcrt.dll    ; exit is a function that ends the calling process. It is defined in msvcrt.dll
     9                                                            ; msvcrt.dll contains exit, printf and all the other important C-runtime specific functions
    10                                  import printf msvcrt.dll
    11                                  ; our data is declared here (the variables needed by our program)
    12                                  segment data use32 class=data
    13                                      ;A negative number a (a: dword) is given. Display the value of that number in base 10 and in the base 16 in the following format: "a = <base_10> (base 10), a = <base_16> (base 16)"
    14 00000000 FFFFFFFF                    a dd -1
    15 00000004 61203D202564202862-         format db "a = %d (base 10), a = %x (base 16)", 0
    15 0000000D 617365203130292C20-
    15 00000016 61203D202578202862-
    15 0000001F 6173652031362900   
    16                                  
    17                                  ; our code starts here
    18                                  segment code use32 class=code
    19                                      start:
    20                                          ; ...
    21 00000000 FF35[00000000]                  push dword [a]
    22 00000006 FF35[00000000]                  push dword [a]
    23 0000000C 68[04000000]                    push dword format 
    24 00000011 FF15[00000000]                  call [printf]
    25 00000017 83C408                          add esp, 4*2
    26                                          ; exit(0)
    27 0000001A 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    28 0000001C FF15[00000000]                  call    [exit]       ; call exit to terminate the program
